<!-- Utilizando o sistema de includes -->
<%- include('inc/header') -%>

<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper">
  <!-- Content Header (Page header) -->
  <section class="content-header">
    <h1>
      Reservas
    </h1>
    <ol class="breadcrumb">
      <li><a href="/"><i class="fa fa-home"></i> Home</a></li>
      <li class="active">Reservas</li>
    </ol>
  </section>

  <!-- Main content -->
  <section class="content container-fluid">

    <div class="box">
      <div class="box-header">
        <h3 class="box-title">Lista</h3>
        <a href="#" class="btn btn-xs pull-right btn-success" data-toggle="modal" data-target="#modal-create"><i
            class="fa fa-plus"></i>
          Novo</a>
      </div>
      <div class="box-header" style="height:44px;">

        <div class="box-tools">
          <form action="">
            <div class="form-group" style="width: 182px; float: left">
              <div class="input-group">
                <div class="input-group-addon">
                  <i class="fa fa-calendar"></i>
                </div>
                <input type="date" name="start" class="form-control unstyled" value="<%= date.start %>">
              </div>
            </div>
            <div class="form-group" style="width: 182px; float: left">
              <div class="input-group">
                <div class="input-group-addon">
                  até
                </div>
                <input type="date" name="end" class="form-control unstyled" value="<%= date.end %>">
              </div>
            </div>
            <div class="form-group" style="float: left; margin-left: 7px;">
              <button type="submit" class="btn btn-default">OK</button>
            </div>
          </form>
        </div>
      </div>
      <!-- /.box-header -->
      <div class="box-body no-padding">

        <!-- Inserindo Graficos - Chart.js -->
        <div style="padding: 10px;">

          <!-- O gráfico pede um canvas -->
          <canvas id="chart" style="height: 250px;">

          </canvas>


        </div>
        <!-- Fim da implementação dos graficos -->

        <table class="table table-striped table-hover">
          <thead>
            <tr>
              <th style="width: 10px">#</th>
              <th>Nome</th>
              <th>E-mail</th>
              <th>Pessoas</th>
              <th>Data</th>
              <th>Hora</th>
              <th style="min-width: 134px;">Ações</th>
            </tr>
          </thead>
          <tbody>

            <!-- Populando os dados de forma dinâmica com o forEach -->
            <% data.forEach(row => {%>

            <tr data-row="<%= JSON.stringify(row) %>">
              <td><%= row.id %></td>
              <td><%= row.name %></td>
              <td><%= row.email %></td>
              <td><%= row.people %></td>
              <!-- Usando o módulo "moment" para formatar data
                    de acordo com a documentação (https://momentjs.com/) -->
              <!-- <td><%= moment(row.date).format('L') %></td> -->
              <td><%= moment(row.date).format('DD [de] MMMM [de] YYYY') %></td>
              <td><%= row.time %></td>
              <td><button type="button" class="btn btn-xs btn-info btn-update"><i class="fa fa-pencil"></i>
                  Editar</button>&nbsp;<button type="button" class="btn btn-xs btn-danger btn-delete"><i
                    class="fa fa-trash"></i> Excluir</button></td>
            </tr>

            <%})%>

          </tbody>
        </table>
      </div>
      <!-- /.box-body -->
      <div class="box-footer clearfix">
        <ul class="pagination pagination-sm no-margin pull-right">

          <!-- Executar um forEach para os botoes da paginacao -->
          <% links.forEach(link => { %>
          <li <% if (link.active) { %> class="active" <% } %>><a href="<%= link.href%>"><%= link.text %></a></li>
          <% }) %>

        </ul>
      </div>
      <!-- /.box-footer -->
    </div>

  </section>
  <!-- /.content -->
</div>
<!-- /.content-wrapper -->

<div class="modal fade" id="modal-create">
  <div class="modal-dialog">
    <div class="modal-content" style="border-top: 3px solid #00a65a;">
      <form method="post">
        <div class="modal-header">
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
          <h4 class="modal-title">Nova Reserva</h4>
        </div>
        <div class="modal-body">
          <div class="form-group">
            <label for="inputNameCreate">Nome</label>
            <input type="text" class="form-control" id="inputNameCreate" name="name">
          </div>
          <div class="form-group">
            <label for="inputEmailCreate">E-mail</label>
            <input type="email" class="form-control" id="inputEmailCreate" name="email">
          </div>
          <div class="form-group">
            <label for="inputPeopleCreate">Pessoas</label>
            <select id="inputPeopleCreate" name="people" class="form-control">
              <option value=""> -- selecione -- </option>
              <option value="1">1</option>
              <option value="2">2</option>
              <option value="3">3</option>
              <option value="4">4</option>
              <option value="5">5+</option>
            </select>
          </div>
          <div class="form-group">
            <label for="inputDateCreate">Data</label>
            <input type="date" id="inputDateCreate" name="date" class="form-control">
          </div>
          <div class="form-group">
            <label for="inputTimeCreate">Hora</label>
            <input type="time" id="inputTimeCreate" name="time" class="form-control">
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-default pull-left" data-dismiss="modal">Cancelar</button>
          <button type="submit" class="btn btn-success">Salvar</button>
        </div>
      </form>
    </div>
    <!-- /.modal-content -->
  </div>
  <!-- /.modal-dialog -->
</div>

<div class="modal fade" id="modal-update">
  <div class="modal-dialog">
    <div class="modal-content" style="border-top: 3px solid #00c0ef;">
      <form method="post">
        <input type="hidden" name="id">
        <div class="modal-header">
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
          <h4 class="modal-title">Editar Reserva</h4>
        </div>
        <div class="modal-body">
          <div class="form-group">
            <label for="inputNameUpdate">Nome</label>
            <input type="text" class="form-control" id="inputNameUpdate" name="name">
          </div>
          <div class="form-group">
            <label for="inputEmailUpdate">E-mail</label>
            <input type="email" class="form-control" id="inputEmailUpdate" name="email">
          </div>
          <div class="form-group">
            <label for="inputPeopleUpdate">Pessoas</label>
            <select id="inputPeopleUpdate" name="people" class="form-control">
              <option value=""> -- selecione -- </option>
              <option value="1">1</option>
              <option value="2">2</option>
              <option value="3">3</option>
              <option value="4">4</option>
              <option value="5">5+</option>
            </select>
          </div>
          <div class="form-group">
            <label for="inputDateUpdate">Data</label>
            <input type="date" id="inputDateUpdate" name="date" class="form-control">
          </div>
          <div class="form-group">
            <label for="inputTimeUpdate">Hora</label>
            <input type="time" id="inputTimeUpdate" name="time" class="form-control">
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-default pull-left" data-dismiss="modal">Cancelar</button>
          <button type="submit" class="btn btn-info">Salvar</button>
        </div>
      </form>
    </div>
    <!-- /.modal-content -->
  </div>
  <!-- /.modal-dialog -->
</div>

<!-- Utilizando o sistema de includes -->
<%- include('inc/footer') -%>

<!-- Criando um plugin para "gerenciar" os updates -->
<script src="/js/formsave.js"></script>
<script src="/js/moment.min.js"></script>

<!-- Criando um plugin para Chart.js (Responável pelos Gráficos) -->
<script src="/admin/bower_components/chart.js/dist/Chart.min.js"></script>

<!-- Criando componente para o código ficar mais limpo -->
<script src="/js/grid.js"></script>

<script>

  //******** Refatorando o código para usar componente *******//

  new Grid({

    deleteUrl: '/admin/reservations/${data.id}',
    deleteMsg: "Deseja excluir a reserva da(o) ${data.name} de ${moment(data.date).format('L')}?",

    // Tratando o case "photo"
    onUpdateLoad: (formUpdate, name, data) => {

      // Para cada um dos "names" que encontrarmos 
      let input = formUpdate.querySelector(`[name=${name}]`);

      switch (name) {

        case 'date':
          // Temos que receber o valor da data americana "YYYY-MM-DD"
          if (input) input.value = moment(data[name]).format('YYYY-MM-DD');
          break;

        default:
          if (input) input.value = data[name];
      }

    }

  });


  // ********** DOCUMENTAÇÃO **************//
  // https://www.chartjs.org/samples/latest/

  // Populando os dados dos gráficos

  // Precisa de 2 paramentros (canvas "2d", opcoes)
  // Toda vez que criamos um cavas, e manipulamos,
  // temos que chamar o método "getContext()", para 
  // informar se vai ser um cavas 2d ou 3d
  let grafico = new Chart(document.querySelector('#chart').getContext("2d"), {

    // O 2º parametro, são os parametros de configuração

    // Tipo do gráfico: linha, área, barra e etc
    type: 'line',

    // Grafico redondo (ver a documentação para mais detalhes)
    // type: 'doughnut',

    // Data: Dados.
    // Sempre vai tratar as informações que
    // esse gráfico vai precisar (que será um objeto)
    data: {

      // Que é um array (que vai aparecer para o usuário)
      // Labels é como se fose as colunas
      // labels: ['Jan', 'Fev', 'Mar', 'Abr', 'Maio', 'Junho', 'Julho', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
      labels: [],

      // É uma array com as informacoes
      // dataset são as linhas
      datasets: [{

        // *********** Esses dados estão sendo populados no fetch **********//

        // // Referente os valores das colunas
        // // data: [1, 3, 5, 3, 1, 3, 5, 3, 1, 3, 5, 3],
        // data: [],

        // // Título do gráfico
        // label: "Reservas",

        // // Retirando esse parametro para o type "doughnut"
        // backgroundColor: 'rgb(87, 200, 87)',

        // borderColor: 'rgb(0, 0, 0)',

        // // Preenchimento: o padrão já é true
        // // fill: false,

        // // Alterar a cor do ponto
        // pointBackgroundColor: 'rgb(255, 255, 255)'

      }]

    },

    // Configurações do gráfico
    // Esse parâmetro também é um objeto
    options: {

      tooltips: {

        // Não endendi o que faz
        mode: 'index',

        // Passando o mouse no gráfico,
        // sempre fica mostrando os valores
        intersect: false
      },

      // Escala do gráfico
      scales: {

        // Aparece uma descrição (que neste caso é o nome "Mês"),
        // No eixo "x" do gráfico
        xAxes: [{

          display: true,

          scaleLabel: {

            display: true,
            labelString: 'Mês'

          }

        }],

        // Aparece uma descrição (que neste caso é o nome "Reservas"),
        // No eixo "y" do gráfico
        yAxes: [{

          display: true,

          scaleLabel: {

            display: true,
            labelString: 'Reservas'

          }

        }]

      }

    }

  });

  fetch(`/admin/reservations/chart${window.location.search}`)
    // then do "fetch"
    .then(response => response.json())
    // then() do "json"
    .then(json => {

      // console.log(json)
      // Substituindo os valores para inputar no grafico
      grafico.data = {

        labels: json.months,

        // É uma array com as informacoes
        // dataset são as linhas
        datasets: [{

          // Referente os valores das colunas
          // data: [1, 3, 5, 3, 1, 3, 5, 3, 1, 3, 5, 3],
          data: json.values,

          // Título do gráfico
          label: "Reservas",

          // Retirando esse parametro para o type "doughnut"
          backgroundColor: 'rgb(87, 200, 87)',

          borderColor: 'rgb(0, 0, 0)',

          // Preenchimento: o padrão já é true
          // fill: false,

          // Alterar a cor do ponto
          pointBackgroundColor: 'rgb(255, 255, 255)'

        }]

      };

      // Forçando o gráfico a redesenhar o "canvas"
      // Com o método update
      grafico.update();

    })

</script>